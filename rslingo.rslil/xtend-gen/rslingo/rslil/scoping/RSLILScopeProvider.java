/**
 * generated by Xtext
 */
package rslingo.rslil.scoping;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import rslingo.rslil.rSLIL.Attribute;
import rslingo.rslil.rSLIL.Entity;
import rslingo.rslil.rSLIL.ExtensionPoint;
import rslingo.rslil.rSLIL.ForeignKey;
import rslingo.rslil.rSLIL.UseCase;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
@SuppressWarnings("all")
public class RSLILScopeProvider extends AbstractDeclarativeScopeProvider {
  @Override
  public IScope getScope(final EObject context, final EReference reference) {
    return super.getScope(context, reference);
  }
  
  public IScope scope_RefAttribute_refAttr(final ForeignKey ctx, final EReference ref) {
    Entity _entity = ctx.getEntity();
    EList<Attribute> _attributes = _entity.getAttributes();
    return Scopes.scopeFor(_attributes);
  }
  
  public IScope scope_RefAttribute_refs(final ForeignKey ctx, final EReference ref) {
    Entity _entity = ctx.getEntity();
    EList<Attribute> _attributes = _entity.getAttributes();
    return Scopes.scopeFor(_attributes);
  }
  
  public IScope scope_UseCase_extPoint(final UseCase ctx, final EReference ref) {
    UseCase _extends = ctx.getExtends();
    EList<ExtensionPoint> _extensionPoints = _extends.getExtensionPoints();
    return Scopes.scopeFor(_extensionPoints);
  }
}
