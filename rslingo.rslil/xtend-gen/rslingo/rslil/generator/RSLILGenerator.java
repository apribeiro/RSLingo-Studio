/**
 * generated by Xtext
 */
package rslingo.rslil.generator;

import com.google.inject.Inject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import rslingo.rslil.generator.RSLIL2JsonGenerator;
import rslingo.rslil.generator.RSLIL2TextGenerator;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class RSLILGenerator implements IGenerator {
  public final static String JSON_MODE = "JsonMode";
  
  public final static String TEXT_MODE = "TextMode";
  
  @Inject
  private RSLIL2JsonGenerator jsonGen;
  
  @Inject
  private RSLIL2TextGenerator textGen;
  
  private String genMode;
  
  public void setGenMode(final String mode) {
    this.genMode = mode;
  }
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    boolean _equals = this.genMode.equals(RSLILGenerator.JSON_MODE);
    if (_equals) {
      this.jsonGen.doGenerate(resource, fsa);
    } else {
      boolean _equals_1 = this.genMode.equals(RSLILGenerator.TEXT_MODE);
      if (_equals_1) {
        this.textGen.doGenerate(resource, fsa);
      }
    }
  }
}
