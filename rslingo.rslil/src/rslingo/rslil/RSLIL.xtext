grammar rslingo.rslil.RSLIL with org.eclipse.xtext.common.Terminals

generate rSLIL "http://www.rslil.rslingo/RSLIL"

Model:
	// Business Level
	project=Project
	systems+=System*
	glossaries+=Glossary*
	stakeholders+=Stakeholder*
	goals+=Goal*
	// System Level
	entities+=Entity*
	actors+=Actor*
	useCases+=UseCase*
	frs+=FR*
	nfrs+=NFR*;

Project:
	'Project' name=ID '{'
		'Name' nameAlias=STRING
		'Description' description=STRING
		('DecomposedBy' refSystem=RefSystem)?
	'}';

System:
	'System' name=ID '{'
		'Name' nameAlias=STRING
		'Description' description=STRING
		('PartOf' partOf=[System])?
	'}';

RefSystem:
	refSystem=[System](',' refs+=[System])*;
	
Glossary:
	'Glossary' name=ID '{'
		'Name' nameAlias=STRING
		'Type' type=RefGlossaryType
		'Acronym' acronym=STRING
		'Description' description=STRING
		('POS' pos=('Adjective'|'Adverb'|'Noun'|'Verb'))?
		('Synset' synset=STRING)?
		termRelation+=TermRelation*
	'}';

RefGlossaryType:
	refType=GlossaryType(',' refs+=GlossaryType)*;

GlossaryType:
	type=('Stakeholder'|'Entity'|'Architectural'|'Actor');

TermRelation:
	'TermRelation' type=('Antonym'|'Hypernym'|'Synonym') term=Term;

Term:
	refTerm=STRING(',' refs+=STRING)*;

Stakeholder:
	'Stakeholder' name=ID '{'
		'Name' nameAlias=STRING
		'Type' type=('Group.Organization'|'Group.BusinessUnit'|'Group.Team'|'Individual.Person'|'Individual.ExternalSystem')
		'Category' category=('Business.User.Direct'|'Business.User.Indirect'|'System.Engine')
		('Description' description=STRING)?
		('PartOf' partOf=[Stakeholder])?
	'}';

Goal:
	'Goal' name=ID '{'
		'Description' description=STRING
		'Stakeholder' stakeholder=[Stakeholder]
		'Priority' priority=('VeryLow'|'Low'|'Medium'|'High'|'VeryHigh')
		dependsOn+=DependsOnGoal*
		composedBy+=ComposedBy*
	'}';

DependsOnGoal:
	type=('Requires'|'Supports'|'Obstructs'|'Conflicts'|'Identical') refGoal=[Goal];

ComposedBy:
	'ComposedBy' type=('And'|'Or') refGoal=[Goal];

Entity:
	'Entity' name=ID '{'
		'Name' nameAlias=STRING
		'Description' description=STRING
		attributes+=Attribute+
	'}';

Attribute:
	'Attribute' '{'
		'Name' name=STRING
		'Description' descrition=STRING
		'Type' type=('Boolean'|'Integer'|'Decimal'|'Currency'|'Date'|'Time'|'Datetime'|'Enumeration'|'Text'|'Regex'|'Ref'|'Image')
		field=Field
		(reference=Reference)?
	'}';

Field:
	'Field' '{'
		'Size' size=INT
		'Multiplicity' multiplicity=('0'|'1'|'0..1'|'*'|STRING)
		'DefaultValue' defaultValue=STRING
	'}';

Reference:
	'Reference' refTo=RefAttribute 'Multiplicity' multiplicity=('0'|'1'|'0..1'|'*'|STRING);

RefAttribute:
	refAttr=[Attribute](',' refs+=[Attribute])*;

Actor:
	'Actor' name=ID '{'
		'Name' nameAlias=STRING
		'Type' type=('User'|'ExternalSystem'|'Timer')
		'Description' description=STRING
		('Stakeholder' stakeholder=[Stakeholder])?
		// FIXME PartOf and SpecializedFrom?
		(dependsOn=DependsOnActor)?
	'}';

DependsOnActor:
	type=('PartOf'|'SpecializedFrom') stakeholder=[Stakeholder];

UseCase:
	'UseCase' name=ID '{'
		'Name' nameAlias=STRING
		'Type' type=('EntityManage'|'EntityBrowse'|'EntitySearch'|'EntityCreate'|'EntityDelete'|'EntitySync'|'Report')
		'Description' description=STRING
		'Priority' priotity=('VeryLow'|'Low'|'Medium'|'High'|'VeryHigh')
		('Goals' goals+=RefGoal*)?
		('FunctionalRequirements' frs+=RefFR*)?
		'ActorInitiates' actorInitiates=[Actor]
		('ActorParticipates' actors=RefActor)?
		('Pre-Conditions' preConditions=STRING)?
		('Post-Conditions' postConditions=STRING)?
		('Include' includes+=RefUC*)?
		('Extend' extends+=[UseCase] 'using ExtensionPoint' extPoint=[ExtensionPoint])?
		extensionnPoints+=ExtensionPoint*
		scenarios+=Scenario*
	'}';

RefGoal:
	refGoal=[Goal](',' refs+=[Goal])*;

RefFR:
	refFR=[FR](',' refs+=[FR])*;

RefActor:
	refActor=[Actor](',' refs+=Actor)*;

RefUC:
	refUC=[UseCase](',' refs+=[UseCase])*;

ExtensionPoint:
	'ExtensionPoint' name=STRING;

Scenario:
	'Scenario' name=ID '{'
		('Description' description=STRING)?
		'Type' type=('Main'|'Alternative'|'Exception')
		'Mode' mode=('Sequential'|'Parallel')
		steps+=Step*
	'}';

Step:
	'Step' name=ID '{'
		'ActionType' type=RefActionType
		'Description' description=STRING
		('Actor' actor=[Actor])?
		('Pre-Conditions' preConditions=STRING)?
		('Post-Conditions' postConditions=STRING)?
	'}';

RefActionType:
	refType=ActionType(',' refs+=ActionType)*;

ActionType:
	type=('ActorPrepareData'|'ActorCallSystem'|'SystemExecutes'|'SystemReturnResult');

FR:
	'FunctionalRequirement' name=ID '{'
		'Name' nameAlias=STRING
		'Description' description=STRING
		'Modality' modality=('Obligation'|'Permission'|'Prohibition')
		'ActionType' actionType=('EntityManage'|'EntityBrowse'|'EntitySearch'|'EntityCreate'|'EntityDelete'|'EntitySync'|'Report')
		'Stakeholder' stakeholder=[Stakeholder]
		'Priority' priority=('VeryLow'|'Low'|'Medium'|'High'|'VeryHigh')
		// FIXME Depends 1 or *?
		('Depends' depends+=RefFR)?
		('PartOf' partOf=[FR])?
	'}';

NFR:
	'Non-FunctionalRequirement' name=ID '{'
		'Name' nameAlias=STRING
		'Description' description=STRING
		'Type' type=('Security'|'Performance'|'Usability'|'Appearance'|'Operational'|'Maintenance'|'Cultural'|'Legal')
		'Sub-Type' subType=('Security.Privacy'|'Security.Integrity'|'Usability.EaseOfUse'|'Usability.EaseOfLean'|'Usability.Accessibility')
		'Metric' metric=('Hours'|'Mins'|'Secs'|'mSecs'|'Tasks')
		'Value' value=STRING
		'Stakeholder' stakeholder=[Stakeholder]
		'Priority' priority=('VeryLow'|'Low'|'Medium'|'High'|'VeryHigh')
		('Depends' depends+=RefNFR)?
		('PartOf' partOf=[NFR])?
	'}';

RefNFR:
	refNFR=[NFR](',' refs+=[NFR])*;
